!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("ngx-bootstrap")):"function"==typeof define&&define.amd?define("ngx-tags-input",["exports","@angular/core","@angular/common","@angular/forms","ngx-bootstrap"],e):e(t["ngx-tags-input"]={},t.ng.core,t.ng.common,t.ng.forms,t.ngxBootstrap)}(this,function(t,e,n,a,o){"use strict";var i=function(){function t(){}return t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),s=function(){},r={provide:a.NG_VALUE_ACCESSOR,useExisting:e.forwardRef(function(){return p}),multi:!0},p=function(){function t(){this.selected="",this.tags=[],this.id1=Math.random().toString(36).substring(7),this.id2=Math.random().toString(36).substring(7),this.onTouchedCallback=s,this.onChangeCallback=s,this.type="light",this.removeLastOnBackspace=!1,this.canDeleteTags=!0,this.placeholder="",this.options=null,this.displayField="displayValue",this.minLengthBeforeOptions=1,this.scrollableOptions=!1,this.scrollableOptionsInView=5,this.onTagsChanged=new e.EventEmitter,this.onMaxTagsReached=new e.EventEmitter,this.onNoOptionsMatch=new e.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.getPlaceHolder=function(){return this.tags&&0<this.tags.length?"":this.placeholder},t.prototype.tagsChanged=function(t,e){this.onChangeCallback(this.tags),this.onTagsChanged.emit({change:t,tag:e}),this.maximumOfTagsReached()&&this.onMaxTagsReached.emit()},t.prototype.removeLastTag=function(t){this.removeLastOnBackspace&&this.tags.length&&""===t.value&&this.removeTag(this.tags[this.tags.length-1])},t.prototype.addTag=function(t){var e;if(""!==t.value.trim()){var n=((e={})[this.displayField]=t.value,e);this.addPredefinedTag(n)}t.value=""},t.prototype.addPredefinedTag=function(t){this.tags||(this.tags=[]),this.maximumOfTagsReached()||(this.tags.push(t),this.tagsChanged("add",t))},t.prototype.removeTag=function(e){this.isDeleteable(e)&&(this.tags=this.tags.filter(function(t){return e!==t}),this.tagsChanged("remove",e))},t.prototype.maximumOfTagsReached=function(){return"undefined"!=typeof this.maxTags&&this.tags.length>=this.maxTags},t.prototype.isDeleteable=function(t){return!("undefined"!=typeof t.deleteable&&!t.deleteable)&&this.canDeleteTags},t.prototype.typeaheadOnSelect=function(t){var e;"string"==typeof t.item?this.addPredefinedTag(((e={})[this.displayField]=t.value,e)):this.addPredefinedTag(t.item),this.selected=""},t.prototype.typeaheadOnNoMatch=function(t){"undefined"!=typeof this.onNoOptionsMatch&&this.onNoOptionsMatch.emit(t)},t.prototype.writeValue=function(t){var n=this;t!==this.tags&&(this.tags=t.map(function(t){var e;return(e={})[n.displayField]=t,e}))},t.prototype.registerOnChange=function(t){this.onChangeCallback=t},t.prototype.registerOnTouched=function(t){this.onTouchedCallback=t},t.decorators=[{type:e.Component,args:[{selector:"tags-input",template:'<div class="tags-input form-group">\n    <div class="form-control">\n        <span class="tags-input__tag badge" ngClass="badge-{{ type }}" *ngFor="let tag of tags">\n            {{ tag[displayField]}}\n            <span *ngIf="isDeleteable(tag)" \n                role="button" \n                class="tags-input__tag-remove-btn" \n                (click)="removeTag(tag)" \n                (touch)="removeTag(tag)">\n                <span aria-hidden="true">&times;</span>\n                <span class="sr-only">Close</span>\n            </span>\n        </span>\n        <input\n            *ngIf="options === null" \n            [id]="id1"\n            class="tags-input__input-field" \n            type="text" \n            placeholder="{{ getPlaceHolder() }}"\n            name="tags"\n            (keyup.enter)="addTag(tagInput)" (keydown.backspace)="removeLastTag(tagInput)"\n            [disabled]="maximumOfTagsReached()"\n            [hidden]="maximumOfTagsReached()"\n            autocomplete="off"\n            #tagInput />\n        <input\n            *ngIf="options !== null" \n            [id]="id2"\n            class="tags-input__input-field" \n            type="text" \n            placeholder="{{ getPlaceHolder() }}"\n            name="tags"\n            (keydown.backspace)="removeLastTag(tagInput)"\n            [(ngModel)]="selected" \n            [hidden]="maximumOfTagsReached()"\n            [disabled]="maximumOfTagsReached()"\n            [typeahead]="options"\n            [typeaheadOptionField]="displayField"\n            (typeaheadOnSelect)="typeaheadOnSelect($event)"\n            (typeaheadNoResults)="typeaheadOnNoMatch($event)"\n            [typeaheadMinLength]="minLengthBeforeOptions"\n            [typeaheadScrollable]="scrollableOptions"\n            [typeaheadOptionsInScrollableView]="scrollableOptionsInView"\n            autocomplete="off"\n            #tagInput />\n    </div>\n</div>',providers:[r],styles:[":host{overflow:auto;white-space:nowrap}.tags-input{align-items:center;display:flex;flex-wrap:wrap}.tags-input__tag{display:inline-block;margin-right:5px;padding-right:.3em;font-size:110%;font-weight:initial;border:1px solid grey}.tags-input__tag-remove-btn{cursor:pointer;display:inline-block;font-size:12px;margin:-3px 0 0 3px;padding:0;vertical-align:top}.tags-input__input-field{border:1px solid transparent;flex-grow:1;outline:0}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={maxTags:[{type:e.Input}],type:[{type:e.Input}],removeLastOnBackspace:[{type:e.Input}],canDeleteTags:[{type:e.Input}],placeholder:[{type:e.Input}],options:[{type:e.Input}],displayField:[{type:e.Input}],minLengthBeforeOptions:[{type:e.Input}],scrollableOptions:[{type:e.Input}],scrollableOptionsInView:[{type:e.Input}],onTagsChanged:[{type:e.Output}],onMaxTagsReached:[{type:e.Output}],onNoOptionsMatch:[{type:e.Output}]},t}(),l=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[]}},t.decorators=[{type:e.NgModule,args:[{declarations:[p],imports:[n.CommonModule,a.FormsModule,o.TypeaheadModule.forRoot()],exports:[p]}]}],t}();t.TagsInputService=i,t.TagsInputComponent=p,t.TagsInputModule=l,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-tags-input.umd.min.js.map